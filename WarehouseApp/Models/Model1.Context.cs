//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WarehouseApp.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MyDBEntities2 : DbContext
    {
        public MyDBEntities2()
            : base("name=MyDBEntities2")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ContentGoodsShippingDocument> ContentGoodsShippingDocument { get; set; }
        public virtual DbSet<ContentGoodsWaybill> ContentGoodsWaybill { get; set; }
        public virtual DbSet<Goods> Goods { get; set; }
        public virtual DbSet<ShippingDocument> ShippingDocument { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Warehouse> Warehouse { get; set; }
        public virtual DbSet<Waybill> Waybill { get; set; }
    
        public virtual int AutoCompleteAllTable(Nullable<int> rowsToInsertWarehouse, Nullable<int> rowsToInsertWaybill, Nullable<int> rowsToInsertShippingDocument, Nullable<int> rowsToInsertContentGoodsWaybill, Nullable<int> rowsToInsertContentGoodsShippingDocument)
        {
            var rowsToInsertWarehouseParameter = rowsToInsertWarehouse.HasValue ?
                new ObjectParameter("RowsToInsertWarehouse", rowsToInsertWarehouse) :
                new ObjectParameter("RowsToInsertWarehouse", typeof(int));
    
            var rowsToInsertWaybillParameter = rowsToInsertWaybill.HasValue ?
                new ObjectParameter("RowsToInsertWaybill", rowsToInsertWaybill) :
                new ObjectParameter("RowsToInsertWaybill", typeof(int));
    
            var rowsToInsertShippingDocumentParameter = rowsToInsertShippingDocument.HasValue ?
                new ObjectParameter("RowsToInsertShippingDocument", rowsToInsertShippingDocument) :
                new ObjectParameter("RowsToInsertShippingDocument", typeof(int));
    
            var rowsToInsertContentGoodsWaybillParameter = rowsToInsertContentGoodsWaybill.HasValue ?
                new ObjectParameter("RowsToInsertContentGoodsWaybill", rowsToInsertContentGoodsWaybill) :
                new ObjectParameter("RowsToInsertContentGoodsWaybill", typeof(int));
    
            var rowsToInsertContentGoodsShippingDocumentParameter = rowsToInsertContentGoodsShippingDocument.HasValue ?
                new ObjectParameter("RowsToInsertContentGoodsShippingDocument", rowsToInsertContentGoodsShippingDocument) :
                new ObjectParameter("RowsToInsertContentGoodsShippingDocument", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AutoCompleteAllTable", rowsToInsertWarehouseParameter, rowsToInsertWaybillParameter, rowsToInsertShippingDocumentParameter, rowsToInsertContentGoodsWaybillParameter, rowsToInsertContentGoodsShippingDocumentParameter);
        }
    
        public virtual int AutoCompleteContentGoodsShippingDocument(Nullable<int> rowsToInsert)
        {
            var rowsToInsertParameter = rowsToInsert.HasValue ?
                new ObjectParameter("RowsToInsert", rowsToInsert) :
                new ObjectParameter("RowsToInsert", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AutoCompleteContentGoodsShippingDocument", rowsToInsertParameter);
        }
    
        public virtual int AutoCompleteContentGoodsWaybill(Nullable<int> rowsToInsert)
        {
            var rowsToInsertParameter = rowsToInsert.HasValue ?
                new ObjectParameter("RowsToInsert", rowsToInsert) :
                new ObjectParameter("RowsToInsert", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AutoCompleteContentGoodsWaybill", rowsToInsertParameter);
        }
    
        public virtual int AutoCompleteGoods()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AutoCompleteGoods");
        }
    
        public virtual int AutoCompleteShippingDocument(Nullable<int> rowsToInsert)
        {
            var rowsToInsertParameter = rowsToInsert.HasValue ?
                new ObjectParameter("RowsToInsert", rowsToInsert) :
                new ObjectParameter("RowsToInsert", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AutoCompleteShippingDocument", rowsToInsertParameter);
        }
    
        public virtual int AutoCompleteWarehouse(Nullable<int> rowsToInsert)
        {
            var rowsToInsertParameter = rowsToInsert.HasValue ?
                new ObjectParameter("RowsToInsert", rowsToInsert) :
                new ObjectParameter("RowsToInsert", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AutoCompleteWarehouse", rowsToInsertParameter);
        }
    
        public virtual int AutoCompleteWaybill(Nullable<int> rowsToInsert)
        {
            var rowsToInsertParameter = rowsToInsert.HasValue ?
                new ObjectParameter("RowsToInsert", rowsToInsert) :
                new ObjectParameter("RowsToInsert", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AutoCompleteWaybill", rowsToInsertParameter);
        }
    
        public virtual int DeleteContentGoodsShippingDocument(Nullable<int> idContentGoods)
        {
            var idContentGoodsParameter = idContentGoods.HasValue ?
                new ObjectParameter("idContentGoods", idContentGoods) :
                new ObjectParameter("idContentGoods", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteContentGoodsShippingDocument", idContentGoodsParameter);
        }
    
        public virtual int DeleteContentGoodsWaybill(Nullable<int> idContentGoods)
        {
            var idContentGoodsParameter = idContentGoods.HasValue ?
                new ObjectParameter("idContentGoods", idContentGoods) :
                new ObjectParameter("idContentGoods", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteContentGoodsWaybill", idContentGoodsParameter);
        }
    
        public virtual int DeleteGoods(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteGoods", nameParameter);
        }
    
        public virtual int DeleteShippingDocument(Nullable<int> shipDocNumber)
        {
            var shipDocNumberParameter = shipDocNumber.HasValue ?
                new ObjectParameter("ShipDocNumber", shipDocNumber) :
                new ObjectParameter("ShipDocNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteShippingDocument", shipDocNumberParameter);
        }
    
        public virtual int DeleteWarehouse(Nullable<short> number)
        {
            var numberParameter = number.HasValue ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteWarehouse", numberParameter);
        }
    
        public virtual int DeleteWaybill(Nullable<int> waybNumber)
        {
            var waybNumberParameter = waybNumber.HasValue ?
                new ObjectParameter("WaybNumber", waybNumber) :
                new ObjectParameter("WaybNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteWaybill", waybNumberParameter);
        }
    
        public virtual int InsertContentGoodsShippingDocument(Nullable<int> idContentGoods, Nullable<int> shippingDocumentNumber, string goodsName, Nullable<byte> quantGoods)
        {
            var idContentGoodsParameter = idContentGoods.HasValue ?
                new ObjectParameter("idContentGoods", idContentGoods) :
                new ObjectParameter("idContentGoods", typeof(int));
    
            var shippingDocumentNumberParameter = shippingDocumentNumber.HasValue ?
                new ObjectParameter("ShippingDocumentNumber", shippingDocumentNumber) :
                new ObjectParameter("ShippingDocumentNumber", typeof(int));
    
            var goodsNameParameter = goodsName != null ?
                new ObjectParameter("GoodsName", goodsName) :
                new ObjectParameter("GoodsName", typeof(string));
    
            var quantGoodsParameter = quantGoods.HasValue ?
                new ObjectParameter("QuantGoods", quantGoods) :
                new ObjectParameter("QuantGoods", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertContentGoodsShippingDocument", idContentGoodsParameter, shippingDocumentNumberParameter, goodsNameParameter, quantGoodsParameter);
        }
    
        public virtual int InsertContentGoodsWaybill(Nullable<int> idContentGoodsWaybill, Nullable<int> waybillNumber, string goodsName, Nullable<byte> quantGoods)
        {
            var idContentGoodsWaybillParameter = idContentGoodsWaybill.HasValue ?
                new ObjectParameter("idContentGoodsWaybill", idContentGoodsWaybill) :
                new ObjectParameter("idContentGoodsWaybill", typeof(int));
    
            var waybillNumberParameter = waybillNumber.HasValue ?
                new ObjectParameter("WaybillNumber", waybillNumber) :
                new ObjectParameter("WaybillNumber", typeof(int));
    
            var goodsNameParameter = goodsName != null ?
                new ObjectParameter("GoodsName", goodsName) :
                new ObjectParameter("GoodsName", typeof(string));
    
            var quantGoodsParameter = quantGoods.HasValue ?
                new ObjectParameter("QuantGoods", quantGoods) :
                new ObjectParameter("QuantGoods", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertContentGoodsWaybill", idContentGoodsWaybillParameter, waybillNumberParameter, goodsNameParameter, quantGoodsParameter);
        }
    
        public virtual int InsertGoods(string name, Nullable<short> price)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertGoods", nameParameter, priceParameter);
        }
    
        public virtual int InsertShippingDocument(Nullable<int> shipDocNumber, Nullable<short> warehouseNumber, Nullable<System.DateTime> unloadDate)
        {
            var shipDocNumberParameter = shipDocNumber.HasValue ?
                new ObjectParameter("ShipDocNumber", shipDocNumber) :
                new ObjectParameter("ShipDocNumber", typeof(int));
    
            var warehouseNumberParameter = warehouseNumber.HasValue ?
                new ObjectParameter("WarehouseNumber", warehouseNumber) :
                new ObjectParameter("WarehouseNumber", typeof(short));
    
            var unloadDateParameter = unloadDate.HasValue ?
                new ObjectParameter("UnloadDate", unloadDate) :
                new ObjectParameter("UnloadDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertShippingDocument", shipDocNumberParameter, warehouseNumberParameter, unloadDateParameter);
        }
    
        public virtual int InsertWarehouse(Nullable<short> number, string keeper)
        {
            var numberParameter = number.HasValue ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(short));
    
            var keeperParameter = keeper != null ?
                new ObjectParameter("Keeper", keeper) :
                new ObjectParameter("Keeper", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertWarehouse", numberParameter, keeperParameter);
        }
    
        public virtual int InsertWaybill(Nullable<int> waybillNumber, Nullable<short> warehouseNumber, Nullable<System.DateTime> entDate)
        {
            var waybillNumberParameter = waybillNumber.HasValue ?
                new ObjectParameter("WaybillNumber", waybillNumber) :
                new ObjectParameter("WaybillNumber", typeof(int));
    
            var warehouseNumberParameter = warehouseNumber.HasValue ?
                new ObjectParameter("WarehouseNumber", warehouseNumber) :
                new ObjectParameter("WarehouseNumber", typeof(short));
    
            var entDateParameter = entDate.HasValue ?
                new ObjectParameter("EntDate", entDate) :
                new ObjectParameter("EntDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertWaybill", waybillNumberParameter, warehouseNumberParameter, entDateParameter);
        }
    
        public virtual ObjectResult<listGoodsQuant_Result> listGoodsQuant(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<listGoodsQuant_Result>("listGoodsQuant", dateParameter);
        }
    
        public virtual ObjectResult<SelectContentGoodsShippingDocument_Result> SelectContentGoodsShippingDocument()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectContentGoodsShippingDocument_Result>("SelectContentGoodsShippingDocument");
        }
    
        public virtual ObjectResult<SelectContentGoodsWaybill_Result> SelectContentGoodsWaybill()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectContentGoodsWaybill_Result>("SelectContentGoodsWaybill");
        }
    
        public virtual ObjectResult<SelectGoods_Result> SelectGoods()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectGoods_Result>("SelectGoods");
        }
    
        public virtual ObjectResult<SelectShippingDocument_Result> SelectShippingDocument()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectShippingDocument_Result>("SelectShippingDocument");
        }
    
        public virtual ObjectResult<SelectWarehouse_Result> SelectWarehouse()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectWarehouse_Result>("SelectWarehouse");
        }
    
        public virtual ObjectResult<SelectWarehouseWaybill_Result> SelectWarehouseWaybill()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectWarehouseWaybill_Result>("SelectWarehouseWaybill");
        }
    
        public virtual ObjectResult<SelectWaybill_Result> SelectWaybill()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectWaybill_Result>("SelectWaybill");
        }
    
        public virtual ObjectResult<string> SelectWaybillGoods(Nullable<short> waybillNumber)
        {
            var waybillNumberParameter = waybillNumber.HasValue ?
                new ObjectParameter("WaybillNumber", waybillNumber) :
                new ObjectParameter("WaybillNumber", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SelectWaybillGoods", waybillNumberParameter);
        }
    
        public virtual ObjectResult<string> SortGoodsOnDate(Nullable<System.DateTime> preDate, Nullable<System.DateTime> postDate)
        {
            var preDateParameter = preDate.HasValue ?
                new ObjectParameter("preDate", preDate) :
                new ObjectParameter("preDate", typeof(System.DateTime));
    
            var postDateParameter = postDate.HasValue ?
                new ObjectParameter("postDate", postDate) :
                new ObjectParameter("postDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SortGoodsOnDate", preDateParameter, postDateParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int UpdateContentGoodsShippingDocument(Nullable<int> idContentGoodsShippingDocument, Nullable<int> setidGoodsShippingDocument, Nullable<int> shippingDocumentNumber, string goodsName, Nullable<byte> quantGoods)
        {
            var idContentGoodsShippingDocumentParameter = idContentGoodsShippingDocument.HasValue ?
                new ObjectParameter("idContentGoodsShippingDocument", idContentGoodsShippingDocument) :
                new ObjectParameter("idContentGoodsShippingDocument", typeof(int));
    
            var setidGoodsShippingDocumentParameter = setidGoodsShippingDocument.HasValue ?
                new ObjectParameter("SetidGoodsShippingDocument", setidGoodsShippingDocument) :
                new ObjectParameter("SetidGoodsShippingDocument", typeof(int));
    
            var shippingDocumentNumberParameter = shippingDocumentNumber.HasValue ?
                new ObjectParameter("ShippingDocumentNumber", shippingDocumentNumber) :
                new ObjectParameter("ShippingDocumentNumber", typeof(int));
    
            var goodsNameParameter = goodsName != null ?
                new ObjectParameter("GoodsName", goodsName) :
                new ObjectParameter("GoodsName", typeof(string));
    
            var quantGoodsParameter = quantGoods.HasValue ?
                new ObjectParameter("QuantGoods", quantGoods) :
                new ObjectParameter("QuantGoods", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateContentGoodsShippingDocument", idContentGoodsShippingDocumentParameter, setidGoodsShippingDocumentParameter, shippingDocumentNumberParameter, goodsNameParameter, quantGoodsParameter);
        }
    
        public virtual int UpdateContentGoodsWaybill(Nullable<int> idContentGoodsWaybill, Nullable<int> setidContentGoodsWaybill, Nullable<int> waybillNumber, string goodsName, Nullable<byte> quantGoods)
        {
            var idContentGoodsWaybillParameter = idContentGoodsWaybill.HasValue ?
                new ObjectParameter("idContentGoodsWaybill", idContentGoodsWaybill) :
                new ObjectParameter("idContentGoodsWaybill", typeof(int));
    
            var setidContentGoodsWaybillParameter = setidContentGoodsWaybill.HasValue ?
                new ObjectParameter("SetidContentGoodsWaybill", setidContentGoodsWaybill) :
                new ObjectParameter("SetidContentGoodsWaybill", typeof(int));
    
            var waybillNumberParameter = waybillNumber.HasValue ?
                new ObjectParameter("WaybillNumber", waybillNumber) :
                new ObjectParameter("WaybillNumber", typeof(int));
    
            var goodsNameParameter = goodsName != null ?
                new ObjectParameter("GoodsName", goodsName) :
                new ObjectParameter("GoodsName", typeof(string));
    
            var quantGoodsParameter = quantGoods.HasValue ?
                new ObjectParameter("QuantGoods", quantGoods) :
                new ObjectParameter("QuantGoods", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateContentGoodsWaybill", idContentGoodsWaybillParameter, setidContentGoodsWaybillParameter, waybillNumberParameter, goodsNameParameter, quantGoodsParameter);
        }
    
        public virtual int UpdateGoods(string name, string setName, Nullable<short> price)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var setNameParameter = setName != null ?
                new ObjectParameter("SetName", setName) :
                new ObjectParameter("SetName", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateGoods", nameParameter, setNameParameter, priceParameter);
        }
    
        public virtual int UpdateShippingDocument(Nullable<int> shippingDocumentNumber, Nullable<int> setShippingDocument, Nullable<short> warehouseNumber, Nullable<System.DateTime> unlDate)
        {
            var shippingDocumentNumberParameter = shippingDocumentNumber.HasValue ?
                new ObjectParameter("ShippingDocumentNumber", shippingDocumentNumber) :
                new ObjectParameter("ShippingDocumentNumber", typeof(int));
    
            var setShippingDocumentParameter = setShippingDocument.HasValue ?
                new ObjectParameter("SetShippingDocument", setShippingDocument) :
                new ObjectParameter("SetShippingDocument", typeof(int));
    
            var warehouseNumberParameter = warehouseNumber.HasValue ?
                new ObjectParameter("WarehouseNumber", warehouseNumber) :
                new ObjectParameter("WarehouseNumber", typeof(short));
    
            var unlDateParameter = unlDate.HasValue ?
                new ObjectParameter("UnlDate", unlDate) :
                new ObjectParameter("UnlDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateShippingDocument", shippingDocumentNumberParameter, setShippingDocumentParameter, warehouseNumberParameter, unlDateParameter);
        }
    
        public virtual int UpdateWarehouse(Nullable<short> number, Nullable<short> setNumber, string setStorekeeper)
        {
            var numberParameter = number.HasValue ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(short));
    
            var setNumberParameter = setNumber.HasValue ?
                new ObjectParameter("SetNumber", setNumber) :
                new ObjectParameter("SetNumber", typeof(short));
    
            var setStorekeeperParameter = setStorekeeper != null ?
                new ObjectParameter("SetStorekeeper", setStorekeeper) :
                new ObjectParameter("SetStorekeeper", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateWarehouse", numberParameter, setNumberParameter, setStorekeeperParameter);
        }
    
        public virtual int UpdateWaybill(Nullable<int> waybillNumber, Nullable<int> setWaybillNumber, Nullable<short> warehouseNumber, Nullable<System.DateTime> entDate)
        {
            var waybillNumberParameter = waybillNumber.HasValue ?
                new ObjectParameter("WaybillNumber", waybillNumber) :
                new ObjectParameter("WaybillNumber", typeof(int));
    
            var setWaybillNumberParameter = setWaybillNumber.HasValue ?
                new ObjectParameter("SetWaybillNumber", setWaybillNumber) :
                new ObjectParameter("SetWaybillNumber", typeof(int));
    
            var warehouseNumberParameter = warehouseNumber.HasValue ?
                new ObjectParameter("WarehouseNumber", warehouseNumber) :
                new ObjectParameter("WarehouseNumber", typeof(short));
    
            var entDateParameter = entDate.HasValue ?
                new ObjectParameter("EntDate", entDate) :
                new ObjectParameter("EntDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateWaybill", waybillNumberParameter, setWaybillNumberParameter, warehouseNumberParameter, entDateParameter);
        }
    }
}
